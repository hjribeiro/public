<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="bcaddc0f-9186-41d7-83e2-66d87ef797a7" activeEnvironment="Default" name="Olympics Mock" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="722a8705-79ae-4f04-8ed1-e2d0e47ae63e" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8080" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="Test" path="/olympics/locations" id="df84ad1e-7126-4146-9f52-ee75c37decd4"><con:settings/><con:parameters><con:parameter><con:name>year</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Test 1" id="02a46146-b6c2-4376-9f86-f48051838225" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:test="http://localhost/test">test:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="c1bc86f0-f3f2-441b-8fbe-45192bb134d2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:originalUri>http://localhost/test</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="year" value="2012" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>year</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:restMockService id="c061be8c-44c3-4a8e-bbb9-b419bcb51a1f" port="8080" path="/" host="LUK-DW3LLC2" name="REST MockService 1"><con:settings/><con:properties/><con:restMockAction name="locations" method="GET" resourcePath="/olympics/locations" id="7b60f29c-0ce2-4616-9d66-d98c37e04ae3"><con:settings/><con:defaultResponse>no data found</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/

// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("2012") )
{
    // return the name of the response you want to dispatch
    return "2012"
}
else if( queryString.contains("2016") )
{
    // return the name of the response you want to dispatch
    return "2016"
}
else if( queryString.contains("2008") )
{
    // return the name of the response you want to dispatch
    return "2008"
}
else if( queryString.contains("2020") )
{
    // return the name of the response you want to dispatch
    return "2020"
}
</con:dispatchPath><con:response name="no data found" id="6bcaa6b2-13af-4041-ac9e-86e43b74b194" httpResponseStatus="404"><con:settings/><con:responseContent/></con:response><con:response name="2008" id="eb4c1aca-5b24-4b0e-91d2-9a3f573d357a" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"year": 2008,
"city": "Beijing",
"country": "China"}</con:responseContent></con:response><con:response name="2012" id="23dba33d-90cd-448b-a64c-794b4e37237a" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"year": 2012,
"city": "London",
"country": "UK"}</con:responseContent></con:response><con:response name="2016" id="163f1c89-13d3-441f-a544-16e896bd4124" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"year": 2016,
"city": "Rio de Janeiro",
"country": "Brasil"}</con:responseContent></con:response><con:response name="2020" id="0b8e5af7-b14b-4338-9a01-9d5430efa601" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"year": 2020,
"city": "Tokyo",
"country": "Japan"}</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>